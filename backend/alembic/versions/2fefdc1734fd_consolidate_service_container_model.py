"""consolidate_service_container_model

Revision ID: 2fefdc1734fd
Revises: d1e07f7afc09
Create Date: 2025-08-06 02:15:06.088428

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2fefdc1734fd'
down_revision = 'd1e07f7afc09'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_service_instances_container'), table_name='service_instances')
    op.drop_index(op.f('idx_service_instances_service'), table_name='service_instances')
    op.drop_index(op.f('ix_service_instances_id'), table_name='service_instances')
    op.drop_table('service_instances')
    op.add_column('model_services', sa.Column('container_name', sa.String(length=255), nullable=True, comment='容器名称'))
    op.add_column('model_services', sa.Column('container_port', sa.Integer(), nullable=True, comment='容器内部端口'))
    op.add_column('model_services', sa.Column('pid', sa.Integer(), nullable=True, comment='容器进程ID'))
    op.add_column('model_services', sa.Column('cpu_usage_percent', sa.DECIMAL(precision=5, scale=2), nullable=True, comment='CPU使用率'))
    op.add_column('model_services', sa.Column('memory_usage_bytes', sa.BIGINT(), nullable=True, comment='内存使用量'))
    op.add_column('model_services', sa.Column('last_heartbeat', sa.DateTime(timezone=True), nullable=True, comment='最后心跳时间'))
    op.alter_column('model_services', 'gradio_port',
               existing_type=sa.INTEGER(),
               comment='主机端口',
               existing_comment='Gradio端口',
               existing_nullable=True)
    op.create_index('idx_model_services_container', 'model_services', ['container_id'], unique=False)
    op.create_unique_constraint('uq_container_id', 'model_services', ['container_id'])
    op.drop_column('model_services', 'last_updated')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('model_services', sa.Column('last_updated', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='最后更新时间'))
    op.drop_constraint('uq_container_id', 'model_services', type_='unique')
    op.drop_index('idx_model_services_container', table_name='model_services')
    op.alter_column('model_services', 'gradio_port',
               existing_type=sa.INTEGER(),
               comment='Gradio端口',
               existing_comment='主机端口',
               existing_nullable=True)
    op.drop_column('model_services', 'last_heartbeat')
    op.drop_column('model_services', 'memory_usage_bytes')
    op.drop_column('model_services', 'cpu_usage_percent')
    op.drop_column('model_services', 'pid')
    op.drop_column('model_services', 'container_port')
    op.drop_column('model_services', 'container_name')
    op.create_table('service_instances',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('service_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('container_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False, comment='容器ID'),
    sa.Column('container_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='容器名称'),
    sa.Column('image_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True, comment='镜像名称'),
    sa.Column('host_port', sa.INTEGER(), autoincrement=False, nullable=True, comment='主机端口'),
    sa.Column('container_port', sa.INTEGER(), autoincrement=False, nullable=True, comment='容器端口'),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True, comment='实例状态: created, starting, running, stopping, stopped, error'),
    sa.Column('pid', sa.INTEGER(), autoincrement=False, nullable=True, comment='进程ID'),
    sa.Column('cpu_usage_percent', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=True, comment='CPU使用率'),
    sa.Column('memory_usage_bytes', sa.BIGINT(), autoincrement=False, nullable=True, comment='内存使用量'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True, comment='创建时间'),
    sa.Column('started_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='启动时间'),
    sa.Column('stopped_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='停止时间'),
    sa.Column('last_heartbeat', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True, comment='最后心跳时间'),
    sa.ForeignKeyConstraint(['service_id'], ['model_services.id'], name=op.f('service_instances_service_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('service_instances_pkey')),
    sa.UniqueConstraint('container_id', name=op.f('service_instances_container_id_key'))
    )
    op.create_index(op.f('ix_service_instances_id'), 'service_instances', ['id'], unique=False)
    op.create_index(op.f('idx_service_instances_service'), 'service_instances', ['service_id'], unique=False)
    op.create_index(op.f('idx_service_instances_container'), 'service_instances', ['container_id'], unique=False)
    # ### end Alembic commands ###