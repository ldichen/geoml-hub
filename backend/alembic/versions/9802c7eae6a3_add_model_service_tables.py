"""Add model service tables

Revision ID: 9802c7eae6a3
Revises: fix_unique_constraint
Create Date: 2025-07-28 21:09:22.398111

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '9802c7eae6a3'
down_revision = 'fix_unique_constraint'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_file_templates_category'), table_name='file_templates')
    op.drop_index(op.f('ix_file_templates_id'), table_name='file_templates')
    op.drop_index(op.f('ix_file_templates_is_public'), table_name='file_templates')
    op.drop_index(op.f('ix_file_templates_language'), table_name='file_templates')
    op.drop_table('file_templates')
    op.drop_index(op.f('ix_file_edit_sessions_file_id'), table_name='file_edit_sessions')
    op.drop_index(op.f('ix_file_edit_sessions_id'), table_name='file_edit_sessions')
    op.drop_index(op.f('ix_file_edit_sessions_is_active'), table_name='file_edit_sessions')
    op.drop_index(op.f('ix_file_edit_sessions_last_activity'), table_name='file_edit_sessions')
    op.drop_index(op.f('ix_file_edit_sessions_session_id'), table_name='file_edit_sessions')
    op.drop_index(op.f('ix_file_edit_sessions_user_id'), table_name='file_edit_sessions')
    op.drop_table('file_edit_sessions')
    op.drop_index(op.f('ix_file_drafts_file_id_user_id'), table_name='file_drafts')
    op.drop_index(op.f('ix_file_drafts_id'), table_name='file_drafts')
    op.drop_index(op.f('ix_file_drafts_updated_at'), table_name='file_drafts')
    op.drop_index(op.f('ix_file_drafts_user_id'), table_name='file_drafts')
    op.drop_table('file_drafts')
    op.drop_index(op.f('ix_file_versions_author_id'), table_name='file_versions')
    op.drop_index(op.f('ix_file_versions_created_at'), table_name='file_versions')
    op.drop_index(op.f('ix_file_versions_file_id_version_number'), table_name='file_versions')
    op.drop_index(op.f('ix_file_versions_id'), table_name='file_versions')
    op.drop_index(op.f('ix_file_versions_version_hash'), table_name='file_versions')
    op.drop_table('file_versions')
    op.drop_index(op.f('ix_file_edit_permissions_file_id_user_id'), table_name='file_edit_permissions')
    op.drop_index(op.f('ix_file_edit_permissions_id'), table_name='file_edit_permissions')
    op.drop_table('file_edit_permissions')
    op.create_index(op.f('ix_repositories_created_at'), 'repositories', ['created_at'], unique=False)
    op.create_index(op.f('ix_repositories_downloads_count'), 'repositories', ['downloads_count'], unique=False)
    op.create_index(op.f('ix_repositories_is_active'), 'repositories', ['is_active'], unique=False)
    op.create_index(op.f('ix_repositories_is_featured'), 'repositories', ['is_featured'], unique=False)
    op.create_index(op.f('ix_repositories_stars_count'), 'repositories', ['stars_count'], unique=False)
    op.create_index(op.f('ix_repositories_updated_at'), 'repositories', ['updated_at'], unique=False)
    op.create_index(op.f('ix_repositories_views_count'), 'repositories', ['views_count'], unique=False)
    op.create_index(op.f('ix_repository_classifications_classification_id'), 'repository_classifications', ['classification_id'], unique=False)
    op.create_index(op.f('ix_repository_classifications_level'), 'repository_classifications', ['level'], unique=False)
    op.create_index(op.f('ix_repository_classifications_repository_id'), 'repository_classifications', ['repository_id'], unique=False)
    op.alter_column('users', 'is_admin',
               existing_type=sa.BOOLEAN(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'is_admin',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.drop_index(op.f('ix_repository_classifications_repository_id'), table_name='repository_classifications')
    op.drop_index(op.f('ix_repository_classifications_level'), table_name='repository_classifications')
    op.drop_index(op.f('ix_repository_classifications_classification_id'), table_name='repository_classifications')
    op.drop_index(op.f('ix_repositories_views_count'), table_name='repositories')
    op.drop_index(op.f('ix_repositories_updated_at'), table_name='repositories')
    op.drop_index(op.f('ix_repositories_stars_count'), table_name='repositories')
    op.drop_index(op.f('ix_repositories_is_featured'), table_name='repositories')
    op.drop_index(op.f('ix_repositories_is_active'), table_name='repositories')
    op.drop_index(op.f('ix_repositories_downloads_count'), table_name='repositories')
    op.drop_index(op.f('ix_repositories_created_at'), table_name='repositories')
    op.create_table('file_edit_permissions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('file_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('can_read', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('can_edit', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('can_commit', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('can_manage', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('permission_source', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('granted_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['repository_files.id'], name=op.f('file_edit_permissions_file_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['granted_by'], ['users.id'], name=op.f('file_edit_permissions_granted_by_fkey'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('file_edit_permissions_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('file_edit_permissions_pkey'))
    )
    op.create_index(op.f('ix_file_edit_permissions_id'), 'file_edit_permissions', ['id'], unique=False)
    op.create_index(op.f('ix_file_edit_permissions_file_id_user_id'), 'file_edit_permissions', ['file_id', 'user_id'], unique=True)
    op.create_table('file_versions',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('file_versions_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('file_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('version_number', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('version_hash', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('version_type', postgresql.ENUM('INITIAL', 'EDIT', 'MERGE', 'BRANCH', name='fileversiontype'), autoincrement=False, nullable=True),
    sa.Column('commit_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('author_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('author_email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('content_hash', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('file_size', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('minio_bucket', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('minio_object_key', sa.VARCHAR(length=1000), autoincrement=False, nullable=False),
    sa.Column('parent_version_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('diff_summary', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('encoding', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('mime_type', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name='file_versions_author_id_fkey', ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['file_id'], ['repository_files.id'], name='file_versions_file_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['parent_version_id'], ['file_versions.id'], name='file_versions_parent_version_id_fkey', ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name='file_versions_pkey'),
    sa.UniqueConstraint('version_hash', name='file_versions_version_hash_key'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_file_versions_version_hash'), 'file_versions', ['version_hash'], unique=False)
    op.create_index(op.f('ix_file_versions_id'), 'file_versions', ['id'], unique=False)
    op.create_index(op.f('ix_file_versions_file_id_version_number'), 'file_versions', ['file_id', 'version_number'], unique=True)
    op.create_index(op.f('ix_file_versions_created_at'), 'file_versions', ['created_at'], unique=False)
    op.create_index(op.f('ix_file_versions_author_id'), 'file_versions', ['author_id'], unique=False)
    op.create_table('file_drafts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('file_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('draft_content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('base_version_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('cursor_position', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('selection_range', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_auto_saved', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('auto_save_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('last_access', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['base_version_id'], ['file_versions.id'], name=op.f('file_drafts_base_version_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['file_id'], ['repository_files.id'], name=op.f('file_drafts_file_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('file_drafts_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('file_drafts_pkey'))
    )
    op.create_index(op.f('ix_file_drafts_user_id'), 'file_drafts', ['user_id'], unique=False)
    op.create_index(op.f('ix_file_drafts_updated_at'), 'file_drafts', ['updated_at'], unique=False)
    op.create_index(op.f('ix_file_drafts_id'), 'file_drafts', ['id'], unique=False)
    op.create_index(op.f('ix_file_drafts_file_id_user_id'), 'file_drafts', ['file_id', 'user_id'], unique=True)
    op.create_table('file_edit_sessions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('session_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('file_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_readonly', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('current_content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('base_version_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('auto_save_interval', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_auto_save', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('cursor_position', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('selection_range', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('last_activity', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['base_version_id'], ['file_versions.id'], name=op.f('file_edit_sessions_base_version_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['file_id'], ['repository_files.id'], name=op.f('file_edit_sessions_file_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('file_edit_sessions_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('file_edit_sessions_pkey')),
    sa.UniqueConstraint('session_id', name=op.f('file_edit_sessions_session_id_key'))
    )
    op.create_index(op.f('ix_file_edit_sessions_user_id'), 'file_edit_sessions', ['user_id'], unique=False)
    op.create_index(op.f('ix_file_edit_sessions_session_id'), 'file_edit_sessions', ['session_id'], unique=False)
    op.create_index(op.f('ix_file_edit_sessions_last_activity'), 'file_edit_sessions', ['last_activity'], unique=False)
    op.create_index(op.f('ix_file_edit_sessions_is_active'), 'file_edit_sessions', ['is_active'], unique=False)
    op.create_index(op.f('ix_file_edit_sessions_id'), 'file_edit_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_file_edit_sessions_file_id'), 'file_edit_sessions', ['file_id'], unique=False)
    op.create_table('file_templates',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('template_content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('file_extension', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('language', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('usage_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_public', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_system', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name=op.f('file_templates_author_id_fkey'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('file_templates_pkey'))
    )
    op.create_index(op.f('ix_file_templates_language'), 'file_templates', ['language'], unique=False)
    op.create_index(op.f('ix_file_templates_is_public'), 'file_templates', ['is_public'], unique=False)
    op.create_index(op.f('ix_file_templates_id'), 'file_templates', ['id'], unique=False)
    op.create_index(op.f('ix_file_templates_category'), 'file_templates', ['category'], unique=False)
    # ### end Alembic commands ###