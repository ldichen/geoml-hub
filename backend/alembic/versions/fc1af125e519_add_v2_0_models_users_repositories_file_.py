"""Add v2.0 models: users, repositories, file storage

Revision ID: fc1af125e519
Revises: 4a3f94270aa6
Create Date: 2025-07-14 14:10:12.691536

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fc1af125e519'
down_revision = '4a3f94270aa6'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('minio_service_health',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('endpoint', sa.String(length=500), nullable=False),
    sa.Column('is_healthy', sa.Boolean(), nullable=True),
    sa.Column('response_time_ms', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('available_space', sa.BIGINT(), nullable=True),
    sa.Column('used_space', sa.BIGINT(), nullable=True),
    sa.Column('total_space', sa.BIGINT(), nullable=True),
    sa.Column('checked_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('total_buckets', sa.Integer(), nullable=True),
    sa.Column('total_objects', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_minio_service_health_id'), 'minio_service_health', ['id'], unique=False)
    op.create_table('system_storage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_users', sa.Integer(), nullable=True),
    sa.Column('total_repositories', sa.Integer(), nullable=True),
    sa.Column('total_files', sa.Integer(), nullable=True),
    sa.Column('total_size', sa.BIGINT(), nullable=True),
    sa.Column('public_repos', sa.Integer(), nullable=True),
    sa.Column('private_repos', sa.Integer(), nullable=True),
    sa.Column('model_repos', sa.Integer(), nullable=True),
    sa.Column('dataset_repos', sa.Integer(), nullable=True),
    sa.Column('model_files_size', sa.BIGINT(), nullable=True),
    sa.Column('dataset_files_size', sa.BIGINT(), nullable=True),
    sa.Column('image_files_size', sa.BIGINT(), nullable=True),
    sa.Column('document_files_size', sa.BIGINT(), nullable=True),
    sa.Column('other_files_size', sa.BIGINT(), nullable=True),
    sa.Column('daily_downloads', sa.Integer(), nullable=True),
    sa.Column('daily_uploads', sa.Integer(), nullable=True),
    sa.Column('daily_views', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('date')
    )
    op.create_index(op.f('ix_system_storage_id'), 'system_storage', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('external_user_id', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('website', sa.String(length=500), nullable=True),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('followers_count', sa.Integer(), nullable=True),
    sa.Column('following_count', sa.Integer(), nullable=True),
    sa.Column('public_repos_count', sa.Integer(), nullable=True),
    sa.Column('storage_quota', sa.BIGINT(), nullable=True),
    sa.Column('storage_used', sa.BIGINT(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_active_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_external_user_id'), 'users', ['external_user_id'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('repositories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=512), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('repo_type', sa.String(length=50), nullable=True),
    sa.Column('visibility', sa.String(length=20), nullable=True),
    sa.Column('repo_metadata', sa.JSON(), nullable=True),
    sa.Column('readme_content', sa.Text(), nullable=True),
    sa.Column('tags', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('license', sa.String(length=100), nullable=True),
    sa.Column('stars_count', sa.Integer(), nullable=True),
    sa.Column('downloads_count', sa.Integer(), nullable=True),
    sa.Column('views_count', sa.Integer(), nullable=True),
    sa.Column('forks_count', sa.Integer(), nullable=True),
    sa.Column('total_files', sa.Integer(), nullable=True),
    sa.Column('total_size', sa.BIGINT(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_featured', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_commit_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_repositories_full_name'), 'repositories', ['full_name'], unique=True)
    op.create_index(op.f('ix_repositories_id'), 'repositories', ['id'], unique=False)
    op.create_index(op.f('ix_repositories_name'), 'repositories', ['name'], unique=False)
    op.create_table('user_follows',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('follower_id', sa.Integer(), nullable=False),
    sa.Column('following_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint('follower_id != following_id', name='no_self_follow'),
    sa.ForeignKeyConstraint(['follower_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['following_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('follower_id', 'following_id', name='unique_user_follow')
    )
    op.create_index(op.f('ix_user_follows_id'), 'user_follows', ['id'], unique=False)
    op.create_table('user_storage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('total_files', sa.Integer(), nullable=True),
    sa.Column('total_size', sa.BIGINT(), nullable=True),
    sa.Column('model_files_count', sa.Integer(), nullable=True),
    sa.Column('model_files_size', sa.BIGINT(), nullable=True),
    sa.Column('dataset_files_count', sa.Integer(), nullable=True),
    sa.Column('dataset_files_size', sa.BIGINT(), nullable=True),
    sa.Column('image_files_count', sa.Integer(), nullable=True),
    sa.Column('image_files_size', sa.BIGINT(), nullable=True),
    sa.Column('document_files_count', sa.Integer(), nullable=True),
    sa.Column('document_files_size', sa.BIGINT(), nullable=True),
    sa.Column('other_files_count', sa.Integer(), nullable=True),
    sa.Column('other_files_size', sa.BIGINT(), nullable=True),
    sa.Column('last_calculated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_user_storage_id'), 'user_storage', ['id'], unique=False)
    op.create_table('file_upload_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=255), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('repository_id', sa.Integer(), nullable=True),
    sa.Column('filename', sa.String(length=500), nullable=False),
    sa.Column('file_path', sa.String(length=1000), nullable=False),
    sa.Column('file_size', sa.BIGINT(), nullable=False),
    sa.Column('mime_type', sa.String(length=200), nullable=True),
    sa.Column('file_hash', sa.String(length=128), nullable=True),
    sa.Column('chunk_size', sa.Integer(), nullable=True),
    sa.Column('total_chunks', sa.Integer(), nullable=False),
    sa.Column('uploaded_chunks', sa.Integer(), nullable=True),
    sa.Column('chunk_status', sa.JSON(), nullable=True),
    sa.Column('minio_bucket', sa.String(length=255), nullable=True),
    sa.Column('minio_object_key', sa.String(length=1000), nullable=True),
    sa.Column('minio_upload_id', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'UPLOADING', 'COMPLETED', 'FAILED', 'CANCELLED', name='uploadstatus'), nullable=True),
    sa.Column('progress_percentage', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['repository_id'], ['repositories.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_file_upload_sessions_id'), 'file_upload_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_file_upload_sessions_session_id'), 'file_upload_sessions', ['session_id'], unique=True)
    op.create_table('repository_classifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('repository_id', sa.Integer(), nullable=False),
    sa.Column('classification_id', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['classification_id'], ['classifications.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['repository_id'], ['repositories.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('repository_id', 'classification_id', name='unique_repo_classification')
    )
    op.create_index(op.f('ix_repository_classifications_id'), 'repository_classifications', ['id'], unique=False)
    op.create_table('repository_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('repository_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=500), nullable=False),
    sa.Column('file_path', sa.String(length=1000), nullable=False),
    sa.Column('file_type', sa.String(length=100), nullable=True),
    sa.Column('mime_type', sa.String(length=200), nullable=True),
    sa.Column('file_size', sa.BIGINT(), nullable=False),
    sa.Column('minio_bucket', sa.String(length=255), nullable=False),
    sa.Column('minio_object_key', sa.String(length=1000), nullable=False),
    sa.Column('file_hash', sa.String(length=128), nullable=True),
    sa.Column('version', sa.String(length=50), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('download_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['repository_id'], ['repositories.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('repository_id', 'file_path', name='unique_file_per_repo')
    )
    op.create_index(op.f('ix_repository_files_id'), 'repository_files', ['id'], unique=False)
    op.create_table('repository_stars',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('repository_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['repository_id'], ['repositories.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'repository_id', name='unique_user_star')
    )
    op.create_index(op.f('ix_repository_stars_id'), 'repository_stars', ['id'], unique=False)
    op.create_table('repository_views',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('repository_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('referer', sa.String(length=1000), nullable=True),
    sa.Column('view_type', sa.String(length=50), nullable=True),
    sa.Column('target_path', sa.String(length=1000), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['repository_id'], ['repositories.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_repository_views_id'), 'repository_views', ['id'], unique=False)
    op.create_table('file_downloads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('file_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('referer', sa.String(length=1000), nullable=True),
    sa.Column('download_method', sa.String(length=50), nullable=True),
    sa.Column('bytes_downloaded', sa.BIGINT(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['repository_files.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_file_downloads_id'), 'file_downloads', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_file_downloads_id'), table_name='file_downloads')
    op.drop_table('file_downloads')
    op.drop_index(op.f('ix_repository_views_id'), table_name='repository_views')
    op.drop_table('repository_views')
    op.drop_index(op.f('ix_repository_stars_id'), table_name='repository_stars')
    op.drop_table('repository_stars')
    op.drop_index(op.f('ix_repository_files_id'), table_name='repository_files')
    op.drop_table('repository_files')
    op.drop_index(op.f('ix_repository_classifications_id'), table_name='repository_classifications')
    op.drop_table('repository_classifications')
    op.drop_index(op.f('ix_file_upload_sessions_session_id'), table_name='file_upload_sessions')
    op.drop_index(op.f('ix_file_upload_sessions_id'), table_name='file_upload_sessions')
    op.drop_table('file_upload_sessions')
    op.drop_index(op.f('ix_user_storage_id'), table_name='user_storage')
    op.drop_table('user_storage')
    op.drop_index(op.f('ix_user_follows_id'), table_name='user_follows')
    op.drop_table('user_follows')
    op.drop_index(op.f('ix_repositories_name'), table_name='repositories')
    op.drop_index(op.f('ix_repositories_id'), table_name='repositories')
    op.drop_index(op.f('ix_repositories_full_name'), table_name='repositories')
    op.drop_table('repositories')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_external_user_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_system_storage_id'), table_name='system_storage')
    op.drop_table('system_storage')
    op.drop_index(op.f('ix_minio_service_health_id'), table_name='minio_service_health')
    op.drop_table('minio_service_health')
    # ### end Alembic commands ###